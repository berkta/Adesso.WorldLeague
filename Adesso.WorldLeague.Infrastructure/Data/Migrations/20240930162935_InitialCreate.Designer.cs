// <auto-generated />
using Adesso.WorldLeague.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Adesso.WorldLeague.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240930162935_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Adesso.WorldLeague.Domain.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Adesso.WorldLeague.Domain.Entities.Draw", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("OperatorFirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OperatorLastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Draws");
                });

            modelBuilder.Entity("Adesso.WorldLeague.Domain.Entities.DrawGroupTeam", b =>
                {
                    b.Property<int>("DrawId")
                        .HasColumnType("integer");

                    b.Property<int>("GroupId")
                        .HasColumnType("integer");

                    b.Property<int>("TeamId")
                        .HasColumnType("integer");

                    b.HasKey("DrawId", "GroupId", "TeamId");

                    b.HasIndex("GroupId");

                    b.HasIndex("TeamId");

                    b.ToTable("DrawGroupTeams");
                });

            modelBuilder.Entity("Adesso.WorldLeague.Domain.Entities.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Adesso.WorldLeague.Domain.Entities.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("Adesso.WorldLeague.Domain.Entities.DrawGroupTeam", b =>
                {
                    b.HasOne("Adesso.WorldLeague.Domain.Entities.Draw", "Draw")
                        .WithMany("DrawGroupTeams")
                        .HasForeignKey("DrawId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Adesso.WorldLeague.Domain.Entities.Group", "Group")
                        .WithMany("DrawGroupTeams")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Adesso.WorldLeague.Domain.Entities.Team", "Team")
                        .WithMany("DrawGroupTeams")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Draw");

                    b.Navigation("Group");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Adesso.WorldLeague.Domain.Entities.Team", b =>
                {
                    b.HasOne("Adesso.WorldLeague.Domain.Entities.Country", "Country")
                        .WithMany("Teams")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Adesso.WorldLeague.Domain.Entities.Country", b =>
                {
                    b.Navigation("Teams");
                });

            modelBuilder.Entity("Adesso.WorldLeague.Domain.Entities.Draw", b =>
                {
                    b.Navigation("DrawGroupTeams");
                });

            modelBuilder.Entity("Adesso.WorldLeague.Domain.Entities.Group", b =>
                {
                    b.Navigation("DrawGroupTeams");
                });

            modelBuilder.Entity("Adesso.WorldLeague.Domain.Entities.Team", b =>
                {
                    b.Navigation("DrawGroupTeams");
                });
#pragma warning restore 612, 618
        }
    }
}
